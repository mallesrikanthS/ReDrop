[{"C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\index.js":"1","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\reportWebVitals.js":"2","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\App.js":"3","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\BarChart.js":"4","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\LineChart.js":"5","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\BarChart1.js":"6","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\BarChart2.js":"7","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\PopUp.js":"8","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\PopUp1.js":"9"},{"size":704,"mtime":1624605074702,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":2056,"mtime":1624948082654,"results":"13","hashOfConfig":"11"},{"size":3210,"mtime":1624603510226,"results":"14","hashOfConfig":"11"},{"size":2636,"mtime":1624603550055,"results":"15","hashOfConfig":"11"},{"size":2614,"mtime":1624600759410,"results":"16","hashOfConfig":"11"},{"size":1747,"mtime":1624603530924,"results":"17","hashOfConfig":"11"},{"size":1653,"mtime":1624947371284,"results":"18","hashOfConfig":"11"},{"size":1748,"mtime":1624885107652,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"av3vtw",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"23"},"C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\index.js",["45","46"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["47","48"],"C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\reportWebVitals.js",[],"C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\App.js",["49","50"],"C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\BarChart.js",["51"],"import React, { PureComponent } from 'react';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Text,\r\n    Label,LabelList, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nclass BChart extends PureComponent {\r\n    state = {\r\n        data: [\r\n            {\r\n            name: 'Page A',\r\n            uv: 4000,\r\n            pv: 2400,\r\n            amt: 2400,\r\n            },\r\n            {\r\n            name: 'Page B',\r\n            uv: 3000,\r\n            pv: 1398,\r\n            amt: 2210,\r\n            },\r\n            {\r\n            name: 'Page C',\r\n            uv: 2000,\r\n            pv: 9800,\r\n            amt: 2290,\r\n            },\r\n            {\r\n            name: 'Page D',\r\n            uv: 2780,\r\n            pv: 3908,\r\n            amt: 2000,\r\n            },\r\n            {\r\n            name: 'Page E',\r\n            uv: 1890,\r\n            pv: 4800,\r\n            amt: 2181,\r\n            },\r\n            {\r\n            name: 'Page F',\r\n            uv: 2390,\r\n            pv: 3800,\r\n            amt: 2500,\r\n            },\r\n            {\r\n            name: 'Page G',\r\n            uv: 3490,\r\n            pv: 4300,\r\n            amt: 2100,\r\n            },\r\n        ],\r\n        activeIndex: 0,\r\n        };\r\n    \r\n        handleClick = (data, index) => {\r\n        this.setState({\r\n            activeIndex: index,\r\n        });\r\n        };\r\n    \r\n        render() {\r\n        const { activeIndex, data } = this.state;\r\n        const activeItem = data[activeIndex];\r\n    \r\n        return (\r\n            <div>\r\n                <ResponsiveContainer width=\"100%\" aspect= {2}>\r\n            <BarChart        \r\n                width= {400}            \r\n                height={200}\r\n                data={data}\r\n                margin={{\r\n                top: 10,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 10,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" stroke='green'>\r\n                <Label value='Pages label' offset={0} position=\"insideBottom\" />\r\n                </XAxis>\r\n                <YAxis stroke='#8884d8' label={{ value: 'pv-uv-amt', angle: -90, position: 'left', textAnchor: 'middle' }} />\r\n                <YAxis yAxisId='left' orientation='right' stroke='red'/>\r\n                <Tooltip separator=' ** ' />            \r\n                <Legend verticalAlign='top' iconType='diamond'height={30}/>\r\n                <Text />\r\n                <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" onClick={this.handleClick} />                       \r\n                <Bar yAxisId='left' dataKey=\"amt\" stackId=\"a\" fill=\"red\" onClick={this.handleClick} />\r\n                <Bar dataKey=\"uv\" fill=\"#ffc658\" onClick={this.handleClick} >\r\n                <LabelList dataKey=\"uv\" position=\"top\" />                \r\n                </Bar>                \r\n            </BarChart>                        \r\n            </ResponsiveContainer>\r\n            <p className=\"content\">{` \"${activeItem.name}\"- Uv of : ${activeItem.uv} Pv : ${activeItem.pv} amt : ${activeItem.amt} `}</p>\r\n            \r\n            </div>            \r\n        );    \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default BChart;\r\n","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\LineChart.js",["52","53"],"import React, { PureComponent } from 'react';\r\nimport { LineChart, Line, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n    Brush, Text, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n    { name: '1', uv: 300, pv: 456 },\r\n    { name: '2', uv: -145, pv: 230 },\r\n    { name: '3', uv: -100, pv: 345 },\r\n    { name: '4', uv: -8, pv: 450 },\r\n    { name: '5', uv: 100, pv: 321 },\r\n    { name: '6', uv: 9, pv: 235 },\r\n    { name: '7', uv: 53, pv: 267 },\r\n    { name: '8', uv: 252, pv: -378 },\r\n    { name: '9', uv: 79, pv: -210 },\r\n    { name: '10', uv: 294, pv: -23 },\r\n    { name: '12', uv: 43, pv: 45 },\r\n    { name: '13', uv: -74, pv: 90 },\r\n    { name: '14', uv: -71, pv: 130 },\r\n    { name: '15', uv: -117, pv: 11 },\r\n    { name: '16', uv: -186, pv: 107 },\r\n    { name: '17', uv: -16, pv: 926 },\r\n    { name: '18', uv: -125, pv: 653 },\r\n    { name: '19', uv: 222, pv: 366 },\r\n    { name: '20', uv: 372, pv: 486 },\r\n    { name: '21', uv: 182, pv: 512 },\r\n    { name: '22', uv: 164, pv: 302 },\r\n    { name: '23', uv: 316, pv: 425 },\r\n    { name: '24', uv: 131, pv: 467 },\r\n    { name: '25', uv: 291, pv: -190 },\r\n    { name: '26', uv: -47, pv: 194 },\r\n    { name: '27', uv: -415, pv: 371 },\r\n    { name: '28', uv: -182, pv: 376 },\r\n    { name: '29', uv: -93, pv: 295 },\r\n    { name: '30', uv: -99, pv: 322 },\r\n    { name: '31', uv: -52, pv: 246 },\r\n    { name: '32', uv: 154, pv: 33 },\r\n    { name: '33', uv: 205, pv: 354 },\r\n    { name: '34', uv: 70, pv: 258 },\r\n    { name: '35', uv: -25, pv: 359 },\r\n    { name: '36', uv: -59, pv: 192 },\r\n    { name: '37', uv: -63, pv: 464 },\r\n    { name: '38', uv: -91, pv: -2 },\r\n    { name: '39', uv: -66, pv: 154 },\r\n    { name: '40', uv: -50, pv: 186 },\r\n  ];\r\n\r\nfunction LChart() {\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" aspect={2}>\r\n        <LineChart        \r\n            width= {400}            \r\n            height={200}\r\n            data={data}\r\n            margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 10,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n            <Tooltip separator=' @ ' offset='10'/>\r\n            <Legend verticalAlign='top' iconType='wye'height={30}/> \r\n            <Text />           \r\n            <Line dataKey=\"uv\" fill=\"red\" />\r\n            <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n            <Brush dataKey=\"name\" height={30} stroke=\"#1155d8\" />\r\n        </LineChart>\r\n        </ResponsiveContainer>\r\n    );    \r\n}\r\n\r\nexport default LChart;\r\n","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\BarChart1.js",["54","55","56","57"],"import React, { PureComponent } from 'react';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Text,\r\n    xAxisId, ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n      name: 'Page A',\r\n      uv: 4000,\r\n      pv: 2400,\r\n      amt: 2400,\r\n    },\r\n    {\r\n      name: 'Page B',\r\n      uv: 3000,\r\n      pv: 1398,\r\n      amt: 2210,\r\n    },\r\n    {\r\n      name: 'Page C',\r\n      uv: 2000,\r\n      pv: 9800,\r\n      amt: 2290,\r\n    },\r\n    {\r\n      name: 'Page D',\r\n      uv: 2780,\r\n      pv: 3908,\r\n      amt: 2000,\r\n    },\r\n    {\r\n      name: 'Page E',\r\n      uv: 1890,\r\n      pv: 4800,\r\n      amt: 2181,\r\n    },\r\n    {\r\n      name: 'Page F',\r\n      uv: 2390,\r\n      pv: 3800,\r\n      amt: 2500,\r\n    },\r\n    {\r\n      name: 'Page G',\r\n      uv: 3490,\r\n      pv: 4300,\r\n      amt: 2100,\r\n    },\r\n  ];\r\n\r\nconst CustomTooltip = ({active, payload, label}) => {\r\n  //console.log(payload.length);\r\n  let plen = payload.length;\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">\r\n          <a href=\"https://www.w3schools.com/\">\r\n          {`${label}- ${payload[0].name} @ ${payload[0].value}`}\r\n          </a>\r\n        </p>\r\n        <p className=\"label\">\r\n          <a href=\"https://www.w3schools.com/\">\r\n          {`${label}- ${payload[1].name} @ ${payload[1].value}`}\r\n          </a>\r\n        </p>\r\n        <p className=\"label\">\r\n          <a href=\"https://www.w3schools.com/\">\r\n          {`${label}- ${payload[2].name} @ ${payload[2].value}`}\r\n          </a>\r\n        </p>\r\n\r\n            \r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nfunction BChart() {\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" aspect= {2}>\r\n        <BarChart        \r\n            width= {400}            \r\n            height={200}\r\n            data={data}\r\n            margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 10,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\"  angle='-45'/>            \r\n            <YAxis />\r\n            <Tooltip separator=' @ ' offset='10' content={<CustomTooltip />} />\r\n            <Legend verticalAlign='bottom' iconType='circle'height={50}/>\r\n            <Text />\r\n            <Bar dataKey=\"pv\" stackId=\"a\" fill=\"green\" />                       \r\n            <Bar dataKey=\"amt\" stackId=\"a\" fill=\"red\" />\r\n            <Bar dataKey=\"uv\" fill=\"#ffc658\" />            \r\n        </BarChart>\r\n        </ResponsiveContainer>\r\n    );    \r\n}\r\n\r\nexport default BChart;\r\n","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\BarChart2.js",["58","59"],"import React, { PureComponent } from 'react';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,Text,\r\n    ResponsiveContainer } from 'recharts';\r\n\r\nconst data = [\r\n    {\r\n      name: 'Page A',\r\n      uv: 4000,\r\n      pv: 2400,\r\n      amt: 2400,\r\n    },\r\n    {\r\n      name: 'Page B',\r\n      uv: 3000,\r\n      pv: 1398,\r\n      amt: 2210,\r\n    },\r\n    {\r\n      name: 'Page C',\r\n      uv: 2000,\r\n      pv: 9800,\r\n      amt: 2290,\r\n    },\r\n    {\r\n      name: 'Page D',\r\n      uv: 2780,\r\n      pv: 3908,\r\n      amt: 2000,\r\n    },\r\n    {\r\n      name: 'Page E',\r\n      uv: 1890,\r\n      pv: 4800,\r\n      amt: 2181,\r\n    },\r\n    {\r\n      name: 'Page F',\r\n      uv: 2390,\r\n      pv: 3800,\r\n      amt: 2500,\r\n    },\r\n    {\r\n      name: 'Page G',\r\n      uv: 3490,\r\n      pv: 4300,\r\n      amt: 2100,\r\n    },\r\n  ];\r\n\r\nfunction BChart() {\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" aspect= {2}>\r\n        <BarChart        \r\n            width= {400}            \r\n            height={200}\r\n            data={data}\r\n            margin={{\r\n            top: 10,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 10,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />            \r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend verticalAlign='top' iconType='star'height={30}/>\r\n            <Text />\r\n            <Bar dataKey=\"pv\" stackId=\"a\" fill=\"green\" />                       \r\n            <Bar dataKey=\"amt\" stackId=\"a\" fill=\"red\" />\r\n            <Bar dataKey=\"uv\" fill=\"#ffc658\" background={{ fill: \"#eee\" }}/>            \r\n        </BarChart>\r\n        </ResponsiveContainer>\r\n    );    \r\n}\r\n\r\nexport default BChart;\r\n","C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\PopUp.js",["60"],"C:\\Users\\MALLE'S\\Desktop\\stack\\rechar\\src\\components\\PopUp1.js",["61"],"import {Component } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nclass PopUp1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //this.ss = history= useHistory();\r\n        this.state={value: ''};\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n        \r\n    handleChange = (e) => {\r\n        this.props.history.push(`e.target.value`);\r\n      }\r\n    //handleChange(e) {\r\n      //  this.setState ({Value:(e.target.value)});\r\n    //}\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        //this.state.ss.push('this.state.value');\r\n    }\r\n\r\n    submitForm() {\r\n        \r\n        this.props.history.push('{this.state.value}');\r\n\r\n    }\r\n    \r\n    \r\n    \r\n    render() {\r\n        console.log(this.props.tigger);\r\n    return (this.props.trigger) ? ( \r\n        \r\n        <div >            \r\n            <button onClick= { ()=> this.props.setTrigger(false)}>close</button>\r\n            <div >\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                \r\n                <select onChange={this.handleChange }>\r\n                    <option value='/linechart'>LineChart </option>                   \r\n                    <option value='/barchart'>BarChart </option>\r\n                    <option value='/bchart'>BarChart1 </option>\r\n                                     \r\n                </select>\r\n                <button type='submit' onClick={this.submitForm} >Submit</button> \r\n                </form>\r\n                \r\n                {this.state.value}\r\n            </div>\r\n            {this.props.children}\r\n            \r\n        </div>\r\n        \r\n    ) : \"\";\r\n}\r\n}\r\n\r\nexport default PopUp1\r\n\r\n\r\n",{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":9},{"ruleId":"62","severity":1,"message":"66","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"62","severity":1,"message":"71","line":11,"column":8,"nodeType":"64","messageId":"65","endLine":11,"endColumn":14},{"ruleId":"62","severity":1,"message":"72","line":12,"column":10,"nodeType":"64","messageId":"65","endLine":12,"endColumn":18},{"ruleId":"62","severity":1,"message":"73","line":2,"column":25,"nodeType":"64","messageId":"65","endLine":2,"endColumn":29},{"ruleId":"62","severity":1,"message":"74","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":30},{"ruleId":"62","severity":1,"message":"73","line":2,"column":27,"nodeType":"64","messageId":"65","endLine":2,"endColumn":31},{"ruleId":"62","severity":1,"message":"74","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":30},{"ruleId":"62","severity":1,"message":"73","line":2,"column":25,"nodeType":"64","messageId":"65","endLine":2,"endColumn":29},{"ruleId":"62","severity":1,"message":"75","line":3,"column":5,"nodeType":"64","messageId":"65","endLine":3,"endColumn":12},{"ruleId":"62","severity":1,"message":"76","line":52,"column":7,"nodeType":"64","messageId":"65","endLine":52,"endColumn":11},{"ruleId":"62","severity":1,"message":"74","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":30},{"ruleId":"62","severity":1,"message":"73","line":2,"column":25,"nodeType":"64","messageId":"65","endLine":2,"endColumn":29},{"ruleId":"62","severity":1,"message":"77","line":19,"column":11,"nodeType":"64","messageId":"65","endLine":19,"endColumn":21},{"ruleId":"62","severity":1,"message":"78","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":20},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'PopUp1' is defined but never used.","'BarChart' is defined but never used.","'Cell' is defined but never used.","'PureComponent' is defined but never used.","'xAxisId' is defined but never used.","'plen' is assigned a value but never used.","'submitForm' is assigned a value but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]